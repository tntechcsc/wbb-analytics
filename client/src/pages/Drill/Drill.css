/* Root Variables and Global Styles */
:root {
    --bg-color: #f4f4f9;
    --header-color: #503291;
    --card-bg-color: #ffffff;
    --text-color-light: #f7f7f7;
    --text-color-dark: #333333;
    --card-color: #6758A0;
    --primary-color: #503291;
    --stat-card-bg: #FFD700;
    --stat-card-text-color: #333333;
    --accent-color: #FFD700;
    --hover-color: #3d2671;
    --box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
}

/* Base Component Styles */
.drill-container,
.player-container,
.court-container,
.extra-stats-container,
.tempo-container,
.timer-container,
.TempoTimer,
.Popup,
.ShotPopup,
.CancelButton,
.AvgTempoDisplay {
    box-shadow: var(--box-shadow);
}

.player-container,
.court-container,
.extra-stats-container,
.PopupPlayerCircle {
    background: var(--card-color);
    border-radius: 8px;
    padding: 15px;
    color: var(--text-color-dark);
}

/* Drill Container */
.drill-container {
    display: flex;
    flex-direction: column;
    height: 100vh;
}

/* Player and Court Container */
.player-and-court-container {
    display: flex;
    flex: 1;
    padding: 20px;
    gap: 20px;
}

/* Player Container */
.player-container {
    flex: 1;
}

/* Court Container */
.court-container {
    flex: 2;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 10px;
}

/* Extra Stats Container */
.extra-stats-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
    margin: 20px;
    padding: 10px;
    background-color: var(--primary-color);
}

/* Extra Stats */
.ExtraStats {
    display: flex;
    margin: 0.5rem;
    padding: 0.5rem;
    justify-content: center;
    align-items: center;
    border: 1px solid #000;
    border-radius: 5px;
    background-color: #6758A0;
    color: white;
    cursor: pointer;
    transition: all 0.3s;
    width: 25%;
    font-size: 1.5rem;
}

.ExtraStats:active {
    transform: scale(0.95);
}

/* Tempo Container */
.tempo-container {
    display: flex;
    justify-content: space-between; /* Space out the buttons evenly */
    padding: 20px; /* Add padding to the container */
}


/* Tempo Timer */
.TempoTimer {
    font-size: 2em;
    margin: 20px;
    padding: 10px;
    border: 2px solid #000;
    border-radius: 5px;
    display: inline-block;
    background-color: #fff;
    color: #333;
    width: 200px;
    text-align: center;
}

.TempoButton {
    padding: 15px 30px; /* Adjust padding to give more space inside the button */
    font-size: 1.5em; /* Adjust font size for better readability */
    margin: 0 10px; /* Add some margin between buttons */
    border-radius: 8px; /* Match border-radius to other elements like the player-container */
    background-color: var(--primary-color); /* Use the primary purple color */
    color: var(--text-color-light); /* Use the light color for text */
    cursor: pointer;
    box-shadow: var(--box-shadow); /* Use the same box-shadow for consistency */
    transition: background-color 0.2s ease; /* Smooth transition for hover effects */
    border: none; /* Remove any borders */
    width: auto; /* Allow the width to be determined by content and padding */
    flex-grow: 1; /* Allow the buttons to grow to fill the space */
    /* Additional styles for interaction states */
}

.TempoButton:hover {
    background-color: var(--hover-color); /* Change background color on hover */
}

.TempoButton.start {
    background-color: #4CAF50; /* Use a green color for starting the tempo */
}

.TempoButton.stop {
    background-color: #f44336; /* Use a red color for stopping the tempo */
}

.TempoButton:active {
    transform: scale(0.98); /* Slightly reduce the scale for a press effect */
}

.TempoButton.disabled, 
.TempoButton:disabled {
    background-color: #ccc; /* Gray color for disabled state */
    color: #666; /* Darker gray for text in disabled state */
    cursor: not-allowed;
    opacity: 0.5; /* Reduce opacity for disabled state */
    pointer-events: none; /* Disable pointer events for disabled state */
}

/* Last Tempo Display */
.LastTempoDisplay {
    font-size: 1.5em; /* Adjust font size to match TempoButton */
    color: var(--text-color-dark); /* Use the dark text color for readability */
    margin: 10px 0; /* Standardize margin around the display */
    padding: 10px; /* Provide some padding */
    background-color: var(--card-bg-color); /* Use the card background color */
    border-radius: 8px; /* Round the corners to match the design */
    text-align: center; /* Center the text */
    width: auto; /* Adjust width to content */
    box-shadow: var(--box-shadow); /* Apply consistent box-shadow */
}

/* Container for the Cancel button */
.cancel-button-container {
    display: flex;
    justify-content: center; /* Centers the button horizontally */
    align-items: center; /* Aligns the button vertically */
    width: 100%; /* Takes full width of its parent container */
    margin-top: 20px; /* Adds some space above the button */
}

/* Cancel Button */
.CancelButton {
    padding: 15px 30px; /* Increase padding for a larger button */
    font-size: 1.5em; /* Increase font size for visibility */
    background-color: #d49b46; /* A consistent red color for cancel actions */
    color: var(--text-color-light); /* White text for better contrast */
    border-radius: 8px; /* Match border-radius to other elements */
    margin: 10px 5px; /* Consistent margin with TempoButton */
    width: auto; /* Adjust width to content and padding */
    cursor: pointer;
    transition: background-color 0.2s ease; /* Smooth transition for hover effects */
    border: none; /* Remove the border */
    box-shadow: var(--box-shadow); /* Consistent shadow with other elements */
}

.CancelButton:hover {
    background-color: #d32f2f; /* Darken the red on hover for feedback */
}

.CancelButton:active {
    transform: scale(0.98); /* Press effect */
}

.CancelButton.disabled {
    background-color: #ccc; /* Greyed out for disabled state */
    color: #666;
    cursor: not-allowed;
    opacity: 0.5;
}

/* Adjusting the container for these elements */
.tempo-controls-container {
    display: flex;
    flex-direction: column; /* Stack elements vertically */
    align-items: center; /* Center items horizontally */
    justify-content: space-around; /* Even spacing */
    width: 100%; /* Full width of the parent container */
    padding: 20px; /* Padding inside the container */
}

/* Specific container for the Cancel button and Last Tempo to group them */
.cancel-and-last-tempo-container {
    display: flex;
    justify-content: space-between; /* Space out the elements inside */
    align-items: center;
    width: 100%; /* Ensure they take full width of their container */
    margin-top: 10px; /* Extra margin on top for spacing */
}

/* Popup Overlay */
.Overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    z-index: 99; /* Below the popup but above other content */
}

/* Popup Container */
.Popup {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: var(--card-bg-color); /* Light purple */
    border-radius: 8px;
    box-shadow: var(--box-shadow);
    z-index: 100;
    max-width: 80%; /* Adjusted to max-width for responsiveness */
    padding: 20px;
    display: flex;
    flex-wrap: wrap; /* Allows items to wrap in rows */
    justify-content: center; /* Centers items horizontally */
    gap: 20px; /* Spacing between player circles */
    overflow-y: auto; /* Enables scrolling if content overflows vertically */
}

/* Popup Player Container */
.PopupPlayerContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    flex-basis: 20%; /* Adjust the flex-basis to control number of items per row */
    min-width: 100px; /* Minimum width for each player container */
}

/* Popup Player Circle */
.PopupPlayerCircle {
    width: 75px; /* Match circle size to main player list */
    height: 75px;
    border-radius: 50%;
    background-color: var(--primary-color); /* Darker purple */
    color: var(--text-color-light); /* White color for contrast */
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2em; /* Font size adjusted for visibility inside circle */
    margin-bottom: 5px; /* Spacing between circle and name */
}

/* Popup Player Name */
.PopupPlayerName {
    font-size: 1em; /* Adjusted to match the rest of the UI */
    color: var(--text-color-dark); /* Dark text for readability */
    word-break: break-word; /* Ensures long names don't overflow */
    text-align: center; /* Center the names below the circles */
}


.PopupCloseButtonContainer {
    width: 100%;
    display: flex;
    justify-content: center;
    margin-top: 20px;
}

/* Shot Popup */
.ShotPopup {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    box-shadow: var(--box-shadow);
    z-index: 100;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 1500px;
    padding: 20px;
    border-radius: 100px;
}

.ShotOutcomeSelection, 
.ClockTimeSelection {
    display: flex;
    justify-content: center;
    gap: 20px;
}

.MadeButton,
.MissedButton,
.ClockButton1,
.ClockButton2,
.ClockButton3,
.SubmitShot {
    margin: 100px 0;
    padding: 100px 200px;
    border: none;
    border-radius: 200px;
    font-size: 2em;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.3s;
    width: 80%;
    text-align: center;
    flex: 1;
}

.MadeButton {
    background-color: #4CAF50;
    color: white;
}

.MissedButton {
    background-color: #f44336;
    color: white;
}

.ClockButton1, 
.ClockButton2, 
.ClockButton3 {
    background-color: #607d8b;
    white-space: nowrap;
    min-width: 120px;
    color: white;
}

.SubmitShot {
    background-color: #2196F3;
    color: white;
}

/* Dynamically displaying clock buttons based on state */
.ShotOutcomeSelection .ClockButton1, 
.ShotOutcomeSelection .ClockButton2, 
.ShotOutcomeSelection .ClockButton3 {
    display: flex;
}

/* Player List */
.PlayerList {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
    align-items: center;
    gap: 10px;
    height: 100%;
}

.PlayerContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    cursor: pointer;
    flex-basis: calc(50% - 20px);
    max-width: calc(40% - 20px);
    height: calc(30% - 20px);
}

.PlayerCircle {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: #8766b4;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 3em;
    color: #ffd700;
}

.PlayerName {
    font-size: 1.2em; /* Adjust font size as necessary */
    color: var(--text-color-dark);
    text-align: center; /* Center text below the circle */
    width: 100%; /* Ensures the name doesn't overflow the circle width */
    margin-top: 5px; /* Space between the circle and the name */
}

.player-inverted .PlayerCircle {
    background-color: #ffd700;
    color: #8766b4;
}

/* Media Queries */
@media (max-width: 768px) {
    .PlayerContainer {
      flex-basis: calc(50% - 20px);
      max-width: calc(50% - 20px);
    }
    .PlayerCircle {
      width: 150px;
      height: 150px;
      font-size: 2em;
    }
    .PlayerName {
      font-size: 1.5em;
    }
}
  
@media (max-width: 480px) {
    .PlayerContainer {
      flex-basis: calc(100% - 20px);
      max-width: calc(100% - 20px);
    }
    .PlayerCircle {
      width: 100px;
      height: 100px;
      font-size: 1.5em;
    }
    .PlayerName {
      font-size: 1em;
    }
}

.LastTempoDisplay,
.AvgTempoDisplay {
    font-size: 1.5em;
    text-align: center;
    width: 100%;
    margin: 10px 0;
}